import{produkColumns as p}from"./produkColumn-DOR3ugfs.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-BbOMJ_SR.js";import"./app-DvfvdJ9T.js";import"./Delete-TDrvi-Lv.js";import"./index-BvGmbsO4.js";import"./index-Bv6WSNkp.js";import"./button-hq0L3CI3.js";import"./id-VFStllgx.js";import"./index-dieJkNj3.js";import"./index-CyG4rhwy.js";import"./index-DXL4Y4Lg.js";import"./iconBase-CKPSqPaW.js";import"./Edit-Da13D2tU.js";import"./index-XYigLg3G.js";import"./x-DZOHrTvv.js";import"./createLucideIcon-B1vGS_wb.js";import"./input-CAAcB4-x.js";import"./label-yAFz3ZhJ.js";import"./checkbox-CAvlxhbU.js";import"./index-LHBHHudO.js";import"./check-D6dG12jR.js";import"./arrow-up-down-Bjrjjn9u.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
