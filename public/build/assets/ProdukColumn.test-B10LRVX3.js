import{produkColumns as p}from"./produkColumn-B2T0b4hW.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-BG-WdvZG.js";import"./app-DWpf5FUs.js";import"./Delete-BmKKHCvX.js";import"./index-BQZGE9nu.js";import"./index-02E0bpzy.js";import"./button-CrFzsX-K.js";import"./id-VFStllgx.js";import"./index-B1RFy27m.js";import"./index-Aebdqn78.js";import"./index-B2P41beN.js";import"./iconBase-DfLmMhZy.js";import"./Edit-DwZwKlTt.js";import"./index-UgvIwGHH.js";import"./x-DJMurZRa.js";import"./createLucideIcon-CLn88IkU.js";import"./input-Bk-YBwO5.js";import"./label-B6OlAyzJ.js";import"./checkbox-C6M3JbtV.js";import"./index-CgApTrOq.js";import"./check-DaZjReAT.js";import"./arrow-up-down-CTpTy8wL.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
