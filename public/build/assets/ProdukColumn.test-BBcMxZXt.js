import{produkColumns as p}from"./produkColumn-Dek0xSuw.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-DKrUx_yh.js";import"./app-B0sDt-Xx.js";import"./Delete-CwbT9_QW.js";import"./index-B-2CuQlF.js";import"./index-Dft6GpJk.js";import"./button-mlSeeL-m.js";import"./id-VFStllgx.js";import"./index-DIBu5wzF.js";import"./index-C9QWPHGW.js";import"./index-sw6iqcBc.js";import"./iconBase-y-CtNTQt.js";import"./Edit-R2Bi9pqB.js";import"./index-DXvzXARy.js";import"./x-CR8e_Cpn.js";import"./createLucideIcon-tLOhiG85.js";import"./input-BdwA6ZYH.js";import"./label-CvUXGsoe.js";import"./checkbox-oQ2AflzF.js";import"./index-SFd08jyF.js";import"./check-cqn_n7J4.js";import"./arrow-up-down-DLLeCnuE.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
