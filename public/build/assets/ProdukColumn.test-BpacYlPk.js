import{produkColumns as p}from"./produkColumn-DZqMcQbE.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-B0dLNvII.js";import"./app-BwJe8CbO.js";import"./Delete-Sv8XKdch.js";import"./index-CdFcvvh3.js";import"./index-BetDYItS.js";import"./button-DsSeVQRd.js";import"./id-VFStllgx.js";import"./index-DdaQK6Fe.js";import"./index-BZpJ7l55.js";import"./index-Dx9r7bR4.js";import"./iconBase-CCIZMWwE.js";import"./Edit-BPZhTF9E.js";import"./index-DCwqnqIw.js";import"./x-C4jvzVQO.js";import"./createLucideIcon-DIoOI8yG.js";import"./input-XZ-DKpfy.js";import"./label-BUqZRbAG.js";import"./checkbox-d1eM4bJY.js";import"./index-BTG0R8vb.js";import"./check-DqyOtzCm.js";import"./arrow-up-down-7zG9smne.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
