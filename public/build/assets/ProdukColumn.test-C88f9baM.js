import{produkColumns as p}from"./produkColumn-Dvv7F-Zm.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-8ElQCOl3.js";import"./app-D6ZcjH5M.js";import"./Delete-CwsZ_EZI.js";import"./index-Cn4qNf59.js";import"./index-CdKmk_0w.js";import"./button-9dIVeN4Q.js";import"./id-VFStllgx.js";import"./index-CrjN2wDv.js";import"./index-BBXuiQ7e.js";import"./index--Fw5wiMM.js";import"./iconBase-CYIr4LZo.js";import"./Edit-OFiRsFiA.js";import"./index-DF62r-hv.js";import"./x-DYcQSfjU.js";import"./createLucideIcon-CCC5E847.js";import"./input-D6nH_N19.js";import"./label-CAvGSaLM.js";import"./checkbox-1N9-vyaK.js";import"./index-DOmMEC-_.js";import"./check-B9Q_kqEv.js";import"./arrow-up-down-Dodc-bqp.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
