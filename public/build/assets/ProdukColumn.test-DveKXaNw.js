import{produkColumns as p}from"./produkColumn-CURy9ya-.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-DYqorgxb.js";import"./app-Dr7halIu.js";import"./Delete-BzjKu_o5.js";import"./index-DNNsgXVU.js";import"./index-DgPIYepU.js";import"./button-DTwN6eUs.js";import"./id-VFStllgx.js";import"./index-CrqCBjux.js";import"./index-r_VtuzHb.js";import"./index-CsgSxw4R.js";import"./iconBase-lXh0S0aN.js";import"./Edit-BL-nCvs8.js";import"./index-C7d3-b8R.js";import"./x-BIXAughG.js";import"./createLucideIcon-aRa24P_6.js";import"./input-DTof9ihG.js";import"./label-DjMnmH3T.js";import"./checkbox-C4_8JQZ5.js";import"./index-Bia0ggw3.js";import"./check-BiWxrpDt.js";import"./arrow-up-down-BP4Q2Rcx.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
