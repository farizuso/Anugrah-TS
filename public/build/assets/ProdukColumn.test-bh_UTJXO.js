import{produkColumns as p}from"./produkColumn-Bz1yWRXj.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-pZzNXhqR.js";import"./app-Dii7zqnW.js";import"./Delete-BCpqYiih.js";import"./index-DheF0MJo.js";import"./index-CgvXscS3.js";import"./button-BsQjze1b.js";import"./id-VFStllgx.js";import"./index-DJREYP7h.js";import"./index-B5o_9Tbb.js";import"./index-rNmJBksz.js";import"./iconBase-CtSaVPHs.js";import"./Edit-CcoT5157.js";import"./index-zcADi2sy.js";import"./x-C_N1bMqv.js";import"./createLucideIcon-CgDtyGi8.js";import"./input-CHyct-zY.js";import"./label-CGFWujJ7.js";import"./checkbox-D1yeP3xQ.js";import"./index-DxFg0HL1.js";import"./check-CKUAekOC.js";import"./arrow-up-down-MT6xc3C4.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
