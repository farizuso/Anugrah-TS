import{produkColumns as p}from"./produkColumn-DfvtZIN_.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-BfBfvbGi.js";import"./app-DQbvnDhz.js";import"./Delete-D7QOk3My.js";import"./index-D8kiIJIg.js";import"./index-CAU1KeKR.js";import"./button-BcYw1vNB.js";import"./id-VFStllgx.js";import"./index-BXAvIkAx.js";import"./index-CSZ7M4n1.js";import"./index-B-FjxqQR.js";import"./iconBase-DK1lzMeX.js";import"./Edit-DTtmFkDM.js";import"./index-CvWcVer5.js";import"./x-CeT3YQUD.js";import"./createLucideIcon-BCvWmZCA.js";import"./input-B5MxC8VO.js";import"./label-DtyYL0P3.js";import"./checkbox-Bv_J3kNf.js";import"./index-BFLe_soZ.js";import"./check-CAuYoaN5.js";import"./arrow-up-down-CAogbYDj.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
