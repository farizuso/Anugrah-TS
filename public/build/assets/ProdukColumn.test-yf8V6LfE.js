import{produkColumns as p}from"./produkColumn-BcPeMYiG.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-CGSk0cR0.js";import"./app-gbqRK6I6.js";import"./Delete-B05_XlRI.js";import"./index-DbVHjbux.js";import"./index-D_GOL74N.js";import"./button-yffARQN3.js";import"./id-VFStllgx.js";import"./index-Cnx-wDt4.js";import"./index-BHfLfCAz.js";import"./index-DUaqigYS.js";import"./iconBase-H9NHt7Ab.js";import"./Edit-BfiKLzvP.js";import"./index-5M3u7x2O.js";import"./x-BmPXDhF2.js";import"./createLucideIcon-BQPeE-JP.js";import"./input-PqUgssO1.js";import"./label-Dl6HLva7.js";import"./checkbox-KHfeoOdh.js";import"./index-BArM0ceO.js";import"./check-D5s7sOKl.js";import"./arrow-up-down-DKH1XiZR.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
