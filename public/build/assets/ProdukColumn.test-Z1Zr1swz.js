import{produkColumns as p}from"./produkColumn-DRl7sGpC.js";import{d as s,i as n,g as t}from"./vi.ClIskdbk-OmWTPUu1.js";import"./app-BrlYwMAy.js";import"./Delete-BoLC0Ifx.js";import"./index-DQLs-PHE.js";import"./index-BEd1eSWB.js";import"./button-BKW_9wcd.js";import"./id-VFStllgx.js";import"./index-Ctq3I69u.js";import"./index-CLhv8HSr.js";import"./index-B9Dy4Rtk.js";import"./iconBase-BhFFNcJt.js";import"./Edit-BWE9BcLQ.js";import"./index-CcUMT02U.js";import"./x-v68c2Nyy.js";import"./createLucideIcon-D7-d9w_5.js";import"./input-B2qQjZnS.js";import"./label-C1i1K_qB.js";import"./checkbox-Cv-N7-mT.js";import"./index-B-_gqG81.js";import"./check-DBAFUCPc.js";import"./arrow-up-down-DPUdS5oC.js";s("produkColumns configuration",()=>{n("includes expected columns",()=>{const o=p.map(i=>i.id||i.accessorKey);t(o).toContain("nama_produk"),t(o).toContain("simbol"),t(o).toContain("kategori"),t(o).toContain("jumlah_stok"),t(o).toContain("harga_jual"),t(o).toContain("actions")}),n("formats harga_jual as currency",()=>{var m;const o=p.find(a=>a.accessorKey==="harga_jual"),i={getValue:()=>"150000"},r=(m=o==null?void 0:o.cell)==null?void 0:m.call(o,{row:i});t(r==null?void 0:r.props.children).toContain("Rp")})});
